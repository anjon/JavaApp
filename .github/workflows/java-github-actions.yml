name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

env:
  IMAGE_NAME: java-app  # Name of the Docker image
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}  # Docker Hub username
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}  # Docker Hub access token

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java and Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build the Maven project
      - name: Build with Maven
        run: mvn clean package

      # Download the counter artifact (if it exists)
      - name: Download Counter Artifact
        id: download-counter
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: counter
          path: ./counter.txt

      # Initialize or increment the counter
      - name: Initialize or Increment Counter
        id: counter
        run: |
          if [ -f counter.txt ]; then
            COUNTER=$(cat counter.txt)
            COUNTER=$((COUNTER + 1))
          else
            COUNTER=1
          fi
          echo "Current counter: $COUNTER"
          echo "$COUNTER" > counter.txt
          FORMATTED_TAG=$(printf "v%02d" $COUNTER)
          echo "FORMATTED_TAG=$FORMATTED_TAG" >> $GITHUB_ENV

      # Upload the updated counter as an artifact
      - name: Upload Counter Artifact
        uses: actions/upload-artifact@v4
        with:
          name: counter
          path: counter.txt
          if-no-files-found: warn

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/$IMAGE_NAME:latest .
          docker tag $DOCKER_HUB_USERNAME/$IMAGE_NAME:latest $DOCKER_HUB_USERNAME/$IMAGE_NAME:$FORMATTED_TAG

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKER_HUB_USERNAME/$IMAGE_NAME:latest
          docker push $DOCKER_HUB_USERNAME/$IMAGE_NAME:$FORMATTED_TAG